dT <- ((P*M)/(M+T))-(v*M*T)-(r*T*C)+(d*C)
dP <- (s*P)*(1-(P/C))
list(c(dM, dC, dT, dP))
})}
# Solve model and plot results
out <- ode(y = state,times=times,func=coral_reefs,parms=parameters)
par(mfrow=c(1,1))
plot(out[,1],out[,2],ylab='Proportion of the Population',xlab='time', ylim=c(0,1),las=1,col="red")
points(out[,1], out[,3],col="blue")
points(out[,1], out[,4],col="yellow")
points(out[,1], out[,5],col="green")
legend(65,1, legend=c("Macro-algae", "Coral", "Algal Turf", "Parrot Fish"),
col=c("red", "blue", "yellow", "green" ), lty=1, cex=.9)
# Initial values
state <- c(M=0.5, C=0.2, T=0.3, P=0.8)
times <- seq(0,100,by=0.1)
# Parameters
parameters <- c(a = 0.1,v=0.8,r=1.0, d=0.44, s=0.49)
# Model
coral_reefs <- function(t,state,parameters){
with(as.list(c(state,parameters)),{
dM <- (a*M*C)-((P*M)/(M+T))+(v*M*T)
dC <- (r*T*C)-(d*C)-(a*M*C)
dT <- ((P*M)/(M+T))-(v*M*T)-(r*T*C)+(d*C)
dP <- (s*P)*(1-(P/C))
list(c(dM, dC, dT, dP))
})}
# Solve model and plot results
out <- ode(y = state,times=times,func=coral_reefs,parms=parameters)
par(mfrow=c(1,1))
plot(out[,1],out[,2],ylab='Proportion of the Population',xlab='time', ylim=c(0,1),las=1,col="red")
points(out[,1], out[,3],col="blue")
points(out[,1], out[,4],col="yellow")
points(out[,1], out[,5],col="green")
legend(65,0.8, legend=c("Macro-algae", "Coral", "Algal Turf", "Parrot Fish"),
col=c("red", "blue", "yellow", "green" ), lty=1, cex=.9)
# Initial values
state <- c(M=0.2, C=0.2, T=0.6, P=0.8)
times <- seq(0,100,by=0.1)
# Parameters
parameters <- c(a = 0.1,v=0.8,r=1.0, d=0.44, s=0.49)
# Model
coral_reefs <- function(t,state,parameters){
with(as.list(c(state,parameters)),{
dM <- (a*M*C)-((P*M)/(M+T))+(v*M*T)
dC <- (r*T*C)-(d*C)-(a*M*C)
dT <- ((P*M)/(M+T))-(v*M*T)-(r*T*C)+(d*C)
dP <- (s*P)*(1-(P/C))
list(c(dM, dC, dT, dP))
})}
# Solve model and plot results
out <- ode(y = state,times=times,func=coral_reefs,parms=parameters)
par(mfrow=c(1,1))
plot(out[,1],out[,2],ylab='Proportion of the Population',xlab='time', ylim=c(0,1),las=1,col="red")
points(out[,1], out[,3],col="blue")
points(out[,1], out[,4],col="yellow")
points(out[,1], out[,5],col="green")
legend(65,1, legend=c("Macro-algae", "Coral", "Algal Turf", "Parrot Fish"),
col=c("red", "blue", "yellow", "green" ), lty=1, cex=.9)
# Initial values
state <- c(M=0.2, C=0.2, T=0.6, P=0.1)
times <- seq(0,100,by=0.1)
# Parameters
parameters <- c(a = 0.1,v=0.8,r=1.0, d=0.44, s=0.49)
# Model
coral_reefs <- function(t,state,parameters){
with(as.list(c(state,parameters)),{
dM <- (a*M*C)-((P*M)/(M+T))+(v*M*T)
dC <- (r*T*C)-(d*C)-(a*M*C)
dT <- ((P*M)/(M+T))-(v*M*T)-(r*T*C)+(d*C)
dP <- (s*P)*(1-(P/C))
list(c(dM, dC, dT, dP))
})}
# Solve model and plot results
out <- ode(y = state,times=times,func=coral_reefs,parms=parameters)
par(mfrow=c(1,1))
plot(out[,1],out[,2],ylab='Proportion of the Population',xlab='time', ylim=c(0,1),las=1,col="red")
points(out[,1], out[,3],col="blue")
points(out[,1], out[,4],col="yellow")
points(out[,1], out[,5],col="green")
legend(65,0.8, legend=c("Macro-algae", "Coral", "Algal Turf", "Parrot Fish"),
col=c("red", "blue", "yellow", "green" ), lty=1, cex=.9)
require(deSolve)
# Initial values
state <- c(M=0.1, C=0.5, T=0.4, P=0.3, x=.7)
times <- seq(0, 100, by=0.1)
# Parameters
parameters <- c(a = 0.1,v=0.8,r=1.0, d=0.44, s=0.49, k=1.014, j = 1.68, sigma = 0.5, phi = 0.2)
# Model
coral_reefs <- function(t,state,parameters){
with(as.list(c(state,parameters)),{
dM <- (a*M*C)-((P*M)/(M+T))+(v*M*T)
dC <- (r*T*C)-(d*C)-(a*M*C)
dT <- ((P*M)/(M+T))-(v*M*T)-(r*T*C)+(d*C)
dP <- (s*P)*(1-(P/C))-sigma*P*(1-x)
dx <- k*x*(1 - x)*(-1 + j*( 1 - C)- sigma*P*(1 - x) + phi*(2*x - 1))
list(c(dM, dC, dT, dP, dx))
})}
# Solve model and plot results
out <- ode(y = state,times=times,func=coral_reefs,parms=parameters)
par(mfrow=c(1,1))
plot(out[,1],out[,2],ylab='Proportion of the Population',xlab='time', ylim=c(0,1),las=1,col="red")
points(out[,1], out[,3],col="blue")
points(out[,1], out[,4],col="yellow")
points(out[,1], out[,5],col="green")
points(out[,1], out[,6],col="orange")
legend(65,1, legend=c("Macro-algae", "Coral", "Algal Turf", "Parrot Fish", "People"),
col=c("red", "blue", "yellow", "green","orange" ), lty=1, cex=.9)
##  Temperature data
library(readxl)
TempData <- read_excel("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/every_lake_1995-2018.xlsx")
#This shows the consistency of the temperature of Lake Michigan over the years
Mich_Temp <- TempData%>%
select(Year,Day,Mich.)
plot(Temp)
ggplot(Temp, aes(x= Year, y= Mich.))+geom_point()
library(dplyr)
#This shows the consistency of the temperature of Lake Michigan over the years
Mich_Temp <- TempData%>%
select(Year,Day,Mich.)
plot(Temp)
ggplot(Temp, aes(x= Year, y= Mich.))+geom_point()
#This shows the consistency of the temperature of Lake Michigan over the years
Mich_Temp <- TempData%>%
select(Year,Day,Mich.)
plot(Mich_Temp)
ggplot(Mich_Temp, aes(x= Year, y= Mich.))+geom_point()
library(ggplot2)
#This shows the consistency of the temperature of Lake Michigan over the years
Mich_Temp <- TempData%>%
select(Year,Day,Mich.)
plot(Mich_Temp)
ggplot(Mich_Temp, aes(x= Year, y= Mich.))+geom_point()
lakes_92_18 <- read_excel("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/great lakes avg temp 1992-2018.xlsx")
TempData <- read_excel("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/every_lake_1995-2018.xlsx")
#This graph shows the average temperatures for the lakes over the course of the year
#IT'S A GOOD GRAPH
plot(lakes_92_18$Day,lakes_92_18$Superior, col= "blue", xlim= c(1,365), ylim= c(0,30),
xlab= "Day of the Year", ylab= "Temperature (Celsius)", main= "Average Temp 1992-2018")
points(lakes_92_18$Day,lakes_92_18$Michigan, col= "orange")
points(lakes_92_18$Day,lakes_92_18$Huron, col="green" )
points(lakes_92_18$Day,lakes_92_18$Erie, col= "red")
points(lakes_92_18$Day,lakes_92_18$Ontario, col= "purple")
legend(0, 27, legend=c("Superior","Michigan","Huron","Erie","Ontario"),
col=c("blue","orange","green","red","purple"), lty=1, title= "Lake")
dat <- read.csv("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/NAS-Data-Download.csv")
#remove 0,0 coordinate row
dat <- dat[-5810,]
library(ggplot2)
library(maps)
library(gganimate)
library(dplyr)
#map of the 50 states
US <- map_data("state")
states <- ggplot(data = US) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)
#show change through time from earliest to latest
dat$Year <- sort(dat$Year,decreasing=F)
#filter data for only Great Lakes lat and long
BorderingGreatLakes <- c("New York","Pennsylvania","Ohio","Indiana","Michigan","Illinois","Wisconsin","Minnesota")
PlottingBorder <- map_data("state", region=BorderingGreatLakes)
Borders <- ggplot(data = PlottingBorder) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)+scale_y_continuous(breaks=seq(from=30,to=50,by=1))+scale_x_continuous(breaks=seq(from=-100,to=-70,by=1))
Superior <- dat %>% filter(Latitude>=46 & Latitude<=50) %>% filter(Longitude<=-84.5 & Longitude>=-92)
map4 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Superior,alpha=0.2)
Michigan <- dat %>% filter(Latitude>=42.5 & Latitude<=46) %>% filter(Longitude<=-84.5 & Longitude>=-88)
map5 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Michigan,alpha=0.2)
Huron <- dat %>% filter(Latitude>=43 & Latitude<=46) %>% filter(Longitude<=-81.5 & Longitude>=-84)
map6 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Huron,alpha=0.2)
Erie <- dat %>% filter(Latitude>=41.5 & Latitude<=43) %>% filter(Longitude<=-79 & Longitude>=-84)
map7 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Erie,alpha=0.2)
Ontario <- dat %>% filter(Latitude>=43.25 & Latitude<=44) %>% filter(Longitude<=-78 & Longitude>=-80)
map8 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Ontario,alpha=0.2)
#all great Lakes plotted
GreatLakes <- Borders +
geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Superior,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="blue"),data=Michigan,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="green"),data=Huron,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="yellow"),data=Erie,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="purple"),data=Ontario,alpha=0.2)
GreatLakes
dat <- read.csv("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/NAS-Data-Download.csv")
library(dplyr)
library(ggplot2)
#remove 0,0 coordinate row
dat <- dat[-5810,]
library(ggplot2)
library(maps)
library(gganimate)
library(dplyr)
## This is the third 8 years of the data (2009-2015)
sup_counts_T8 <-nrow(table(SuperiorThird8$HUC.8.Number))
mich_counts_T8 <-nrow(table(MichiganThird8$HUC.8.Number))
huron_counts_T8<-nrow(table(HuronThird8$HUC.8.Number))
erie_counts_T8 <- nrow(table(ErieThird8$HUC.8.Number))
ont_counts_T8 <- nrow(table(OntarioThird8$HUC.8.Number))
zm_HUC_occurances_T8 <-c(sup_counts_T8, mich_counts_T8, huron_counts_T8, erie_counts_T8, ont_counts_T8)
sizeDatT8 <- data.frame(size_of_lake, zm_HUC_occurances_T8)
ggplot(sizeDatT8, aes(x=size_of_lake, y=zm_HUC_occurances_T8)) + geom_point() + geom_smooth(method = "lm") + labs(title="Size of Lake vs. HUC Occurances", subtitle="From USGS Zebra Mussel Dataset For Third 8 Years", y="HUC Occurances", x="Size of Lake")
#Superior, Michigan, Huron, Erie, Ontario sizes in square miles
size_of_lake <- c(31700, 22300, 23000, 9910, 7340)
sup_counts <-nrow(table(Superior$HUC.8.Number))
mich_counts <-nrow(table(Michigan$HUC.8.Number))
#Plot number of zebra mussels sightings per year
Summarize_sightings_by_year_month <- dat %>% count(Year, Month,State)
plot(Summarize_sightings_by_year_month$Year,Summarize_sightings_by_year_month$n)
ggplot(Summarize_sightings_by_year_month, aes(fill=Summarize_sightings_by_year_month$State, y=Summarize_sightings_by_year_month$n, x=Summarize_sightings_by_year_month$Year)) +
geom_bar(position="dodge", stat="identity")
dat <- read.csv("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/NAS-Data-Download.csv")
#remove 0,0 coordinate row
dat <- dat[-5810,]
library(ggplot2)
library(maps)
library(gganimate)
library(dplyr)
#map of the 50 states
US <- map_data("state")
states <- ggplot(data = US) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)
#show change through time from earliest to latest
dat$Year <- sort(dat$Year,decreasing=F)
#Plot number of zebra mussels sightings per year
Summarize_sightings_by_year_month <- dat %>% count(Year, Month,State)
plot(Summarize_sightings_by_year_month$Year,Summarize_sightings_by_year_month$n)
ggplot(Summarize_sightings_by_year_month, aes(fill=Summarize_sightings_by_year_month$State, y=Summarize_sightings_by_year_month$n, x=Summarize_sightings_by_year_month$Year)) +
geom_bar(position="dodge", stat="identity")
##  Temperature data
library(readxl)
lakes_92_18 <- read_excel("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/great lakes avg temp 1992-2018.xlsx")
every_lake <- read_excel("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/every lake 1995-2018.xlsx")
#This graph shows the average temperatures for the lakes over the course of the year
#IT'S A GOOD GRAPH
plot(lakes_92_18$Day,lakes_92_18$Superior, col= "blue", xlim= c(1,365), ylim= c(0,30),
xlab= "Day of the Year", ylab= "Temperature (Celsius)", main= "Average Temp 1992-2018")
points(lakes_92_18$Day,lakes_92_18$Michigan, col= "orange")
points(lakes_92_18$Day,lakes_92_18$Huron, col="green" )
points(lakes_92_18$Day,lakes_92_18$Erie, col= "red")
points(lakes_92_18$Day,lakes_92_18$Ontario, col= "purple")
legend(0, 27, legend=c("Superior","Michigan","Huron","Erie","Ontario"),
col=c("blue","orange","green","red","purple"), lty=1, title= "Lake")
# #This shows the consistency of the temperature of Lake Michigan over the years
Mich_Temp <- every_lake%>%
select(Year,Day,Mich.)
#
plot(Temp)
#
ggplot(Temp, aes(x= Year, y= Mich.))+geom_point()
every_lake <- read_excel("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/every lake 1995-2018.xlsx")
View(lakes_92_18)
dat <- read.csv("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/NAS-Data-Download.csv")
#remove 0,0 coordinate row
dat <- dat[-5810,]
library(ggplot2)
library(maps)
library(gganimate)
library(dplyr)
#map of the 50 states
US <- map_data("state")
states <- ggplot(data = US) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)
#show change through time from earliest to latest
dat$Year <- sort(dat$Year,decreasing=F)
map1 <- states + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=dat,alpha=0.2)+transition_states(dat$Year)
#population in 2019
latest <- dat[dat$Year=="2019",]
map2 <- states + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=latest,alpha=0.2)
#animation of only those established or collected after 2000
established_collected_post_2000 <- filter(dat[dat$Year>=2000,]) %>%
filter(Status=="established"|Status=="collected")
established_collected_post_2000$Year <- sort(established_collected_post_2000$Year,decreasing=F)
map3 <- states + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=established_collected_post_2000,alpha=0.2)+transition_states(established_collected_post_2000$Year)+shadow_mark()
#Plot number of zebra mussels sightings per year
Summarize_sightings_by_year_month <- dat %>% count(Year, Month,State)
plot(Summarize_sightings_by_year_month$Year,Summarize_sightings_by_year_month$n)
ggplot(Summarize_sightings_by_year_month, aes(fill=Summarize_sightings_by_year_month$State, y=Summarize_sightings_by_year_month$n, x=Summarize_sightings_by_year_month$Year)) +
geom_bar(position="dodge", stat="identity")
#filter data for only Great Lakes lat and long
BorderingGreatLakes <- c("New York","Pennsylvania","Ohio","Indiana","Michigan","Illinois","Wisconsin","Minnesota")
PlottingBorder <- map_data("state", region=BorderingGreatLakes)
Borders <- ggplot(data = PlottingBorder) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)+scale_y_continuous(breaks=seq(from=30,to=50,by=1))+scale_x_continuous(breaks=seq(from=-100,to=-70,by=1))
Superior <- dat %>% filter(Latitude>=46 & Latitude<=50) %>% filter(Longitude<=-84.5 & Longitude>=-92)
map4 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Superior,alpha=0.2)
Michigan <- dat %>% filter(Latitude>=42.5 & Latitude<=46) %>% filter(Longitude<=-84.5 & Longitude>=-88)
map5 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Michigan,alpha=0.2)
Huron <- dat %>% filter(Latitude>=43 & Latitude<=46) %>% filter(Longitude<=-81.5 & Longitude>=-84)
map6 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Huron,alpha=0.2)
Erie <- dat %>% filter(Latitude>=41.5 & Latitude<=43) %>% filter(Longitude<=-79 & Longitude>=-84)
map7 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Erie,alpha=0.2)
Ontario <- dat %>% filter(Latitude>=43.25 & Latitude<=44) %>% filter(Longitude<=-78 & Longitude>=-80)
map8 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Ontario,alpha=0.2)
#all great Lakes plotted
GreatLakes <- Borders +
geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Superior,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="blue"),data=Michigan,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="green"),data=Huron,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="yellow"),data=Erie,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="purple"),data=Ontario,alpha=0.2)
```
#Linear Regression of Size of Lake and HUC Counts
```{r SizeLR, echo=FALSE}
#Superior, Michigan, Huron, Erie, Ontario sizes in square miles
size_of_lake <- c(31700, 22300, 23000, 9910, 7340)
sup_counts <-nrow(table(Superior$HUC.8.Number))
mich_counts <-nrow(table(Michigan$HUC.8.Number))
huron_counts <-nrow(table(Huron$HUC.8.Number))
erie_counts <- nrow(table(Erie$HUC.8.Number))
ont_counts <- nrow(table(Ontario$HUC.8.Number))
zm_HUC_occurances <-c(sup_counts, mich_counts, huron_counts, erie_counts, ont_counts)
sizeDat <- data.frame(size_of_lake, zm_HUC_occurances)
HUCmodelSize <- lm(zm_HUC_occurances~size_of_lake, sizeDat)
summary(HUCmodelSize)
sizeCoef <- coef(HUCmodelSize)[2]
view(zm_HUC_occurances)
library(tibble)
view(zm_HUC_occurances)
view(dat)
sup_counts <-nrow(unique(Superior$Specimen.Number))
mich_counts <-nrow(unique(Michigan$Specimen.Number))
huron_counts <-nrow(unique(Huron$Specimen.Number))
erie_counts <- nrow(unique(Erie$Specimen.Number))
ont_counts <- nrow(uniqie(Ontario$Specimen.Number))
zm_occurances <-c(sup_counts, mich_counts, huron_counts, erie_counts, ont_counts
ont_counts <- nrow(unique(Ontario$Specimen.Number))
zm_occurances <-c(sup_counts, mich_counts, huron_counts, erie_counts, ont_counts
zm_occurances <-c(sup_counts, mich_counts, huron_counts, erie_counts, ont_counts)
zm_occurances <- c(sup_counts, mich_counts, huron_counts, erie_counts, ont_counts)
view(zm_occurances)
sup_counts
sup_counts <-nrow(Superior$Specimen.Number)
sup_counts
Superior
view(Superior)
mich_counts <-(unique(Michigan$Specimen.Number))
view(mich_counts)
sup_occ <- unique(Michigan$Specimen.Number)
mich_occ <- unique(Michigan$Specimen.Number)
huron_occ <- (unique(Huron$Specimen.Number)
ont_occ <- unique(Ontario$Specimen.Number)
huron_occ <- unique(Huron$Specimen.Number)
erie_occ <- unique(Erie$Specimen.Number)
ont_occ <- unique(Ontario$Specimen.Number)
zm_occ <- c(sup_occ, mich_occ, huron_occ, erie_occ, ont_occ)
zm_occ
view(zm_occ)
sup_occ <- unique(Superior$Specimen.Number)
mich_occ <- unique(Michigan$Specimen.Number)
huron_occ <- unique(Huron$Specimen.Number)
erie_occ <- unique(Erie$Specimen.Number)
ont_occ <- unique(Ontario$Specimen.Number)
view(sup-occ)
view(sup_occ)
view(mich_occ)
count(sup_occ)
?summarise
n(sup_occ)
summarize(sup_occ,n())
nrow(table(sup_occ))
nrow(table(mich_occ))
nrow(table(huron_occ))
nrow(table(erie_occ))
nrow(table(ont_occ))
table(sup_occ)
SupOcc <- nrow(table(sup_occ))
MichOcc <- nrow(table(mich_occ))
HurOcc <- nrow(table(huron_occ))
EriOcc <-nrow(table(erie_occ))
Ont_Occ <- nrow(table(ont_occ))
OntOcc <- nrow(table(ont_occ))
zm_occ <- c(SupOcc, MichOcc, HurOcc, EriOcc, OntOcc)
table(zm_occ)
view(dat)
#all great Lakes plotted
GreatLakes <- Borders +
geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Superior,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="blue"),data=Michigan,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="green"),data=Huron,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="yellow"),data=Erie,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="purple"),data=Ontario,alpha=0.2)
GreatLakes
dat <- read.csv("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/NAS-Data-Download.csv")
library(dplyr)
library(ggplot2)
```
```{r, echo = FALSE, eval=FALSE}
# Checking to unique HUC ID Numbers
as.data.frame(table(dat$HUC.8.Number))
# There are 350 unique HUC ID numbers
# That means there are 350 different locations for this data
```
```{r, echo = FALSE}
#remove 0,0 coordinate row
dat <- dat[-5810,]
library(ggplot2)
library(maps)
library(gganimate)
library(dplyr)
#Plot number of zebra mussels sightings per year
Summarize_sightings_by_year_month <- dat %>% count(Year, Month,State)
plot(Summarize_sightings_by_year_month$Year,Summarize_sightings_by_year_month$n)
ggplot(Summarize_sightings_by_year_month, aes(fill=Summarize_sightings_by_year_month$State, y=Summarize_sightings_by_year_month$n, x=Summarize_sightings_by_year_month$Year)) +
geom_bar(position="dodge", stat="identity")
Summarize_sightings_by_year_month
lm(n~Year, Summarize_sightings_by_year_month)
CountYear <- lm(n~Year, Summarize_sightings_by_year_month)
summary(CountYear)
ggplot(Summarize_sightings_by_year_month, aes(x=Summarize_sightings_by_year_month$Year, y=Summarize_sightings_by_year_month$n)) + geom_point() + geom_smooth(method = "lm") + labs(title="Occurrences By Year", y="Count",
ggplot(Summarize_sightings_by_year_month, aes(fill=Summarize_sightings_by_year_month$State, y=Summarize_sightings_by_year_month$n, x=Summarize_sightings_by_year_month$Year))
ggplot(Summarize_sightings_by_year_month, aes(x=Summarize_sightings_by_year_month$Year, y=Summarize_sightings_by_year_month$n)) + geom_point() + geom_smooth(method = "lm") + labs(title="Occurrences By Year", y="Count",
ggplot(Summarize_sightings_by_year_month, aes(x=Summarize_sightings_by_year_month$Year, y=Summarize_sightings_by_year_month$n)) + geom_point() + geom_smooth(method = "lm") + labs(title="Occurrences By Year", y="Count")
ggplot(Summarize_sightings_by_year_month, aes(x=Summarize_sightings_by_year_month$Year, y=Summarize_sightings_by_year_month$n)) + geom_point() + geom_smooth(method = "lm") + labs(title="Occurrences By Year", y="Count",x="Year")
ggplot(Summarize_sightings_by_year_month, aes(fill=Summarize_sightings_by_year_month$State, y=Summarize_sightings_by_year_month$n, x=Summarize_sightings_by_year_month$Year))
ggplot(Summarize_sightings_by_year_month, aes(fill=Summarize_sightings_by_year_month$State, y=Summarize_sightings_by_year_month$n, x=Summarize_sightings_by_year_month$Year)) + geom_bar(position="dodge", stat="identity")
#number of specimens found in each lake`
sup_occ <- unique(Superior$Specimen.Number)
mich_occ <- unique(Michigan$Specimen.Number)
huron_occ <- unique(Huron$Specimen.Number)
erie_occ <- unique(Erie$Specimen.Number)
ont_occ <- unique(Ontario$Specimen.Number)
zm_occ <- c(sup_occ, mich_occ, huron_occ, erie_occ, ont_occ)
SupOcc <- nrow(table(sup_occ))
MichOcc <- nrow(table(mich_occ))
HurOcc <- nrow(table(huron_occ))
EriOcc <- nrow(table(erie_occ))
OntOcc <- nrow(table(ont_occ))
zm_occ <- c(SupOcc, MichOcc, HurOcc, EriOcc, OntOcc)
Superior <- dat %>% filter(Latitude>=46 & Latitude<=50) %>% filter(Longitude<=-84.5 & Longitude>=-92)
map4 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Superior,alpha=0.2)
Michigan <- dat %>% filter(Latitude>=42.5 & Latitude<=46) %>% filter(Longitude<=-84.5 & Longitude>=-88)
#filter data for only Great Lakes lat and long
BorderingGreatLakes <- c("New York","Pennsylvania","Ohio","Indiana","Michigan","Illinois","Wisconsin","Minnesota")
PlottingBorder <- map_data("state", region=BorderingGreatLakes)
Borders <- ggplot(data = PlottingBorder) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)+scale_y_continuous(breaks=seq(from=30,to=50,by=1))+scale_x_continuous(breaks=seq(from=-100,to=-70,by=1))
Superior <- dat %>% filter(Latitude>=46 & Latitude<=50) %>% filter(Longitude<=-84.5 & Longitude>=-92)
map4 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Superior,alpha=0.2)
Michigan <- dat %>% filter(Latitude>=42.5 & Latitude<=46) %>% filter(Longitude<=-84.5 & Longitude>=-88)
map5 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Michigan,alpha=0.2)
Huron <- dat %>% filter(Latitude>=43 & Latitude<=46) %>% filter(Longitude<=-81.5 & Longitude>=-84)
map6 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Huron,alpha=0.2)
Erie <- dat %>% filter(Latitude>=41.5 & Latitude<=43) %>% filter(Longitude<=-79 & Longitude>=-84)
map7 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Erie,alpha=0.2)
Ontario <- dat %>% filter(Latitude>=43.25 & Latitude<=44) %>% filter(Longitude<=-78 & Longitude>=-80)
map8 <- Borders + geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Ontario,alpha=0.2)
#all great Lakes plotted
GreatLakes <- Borders +
geom_point(aes(x=Longitude,y=Latitude,color=Status),data=Superior,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="blue"),data=Michigan,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="green"),data=Huron,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="yellow"),data=Erie,alpha=0.2)+
geom_point(aes(x=Longitude,y=Latitude,color="purple"),data=Ontario,alpha=0.2)
```
```{r}
#number of specimens found in each lake`
sup_occ <- unique(Superior$Specimen.Number)
mich_occ <- unique(Michigan$Specimen.Number)
huron_occ <- unique(Huron$Specimen.Number)
erie_occ <- unique(Erie$Specimen.Number)
ont_occ <- unique(Ontario$Specimen.Number)
zm_occ <- c(sup_occ, mich_occ, huron_occ, erie_occ, ont_occ)
SupOcc <- nrow(table(sup_occ))
MichOcc <- nrow(table(mich_occ))
HurOcc <- nrow(table(huron_occ))
EriOcc <- nrow(table(erie_occ))
OntOcc <- nrow(table(ont_occ))
zm_occ <- c(SupOcc, MichOcc, HurOcc, EriOcc, OntOcc)
zm_occ
dat <- read.csv("C:/Users/kmb057/Documents/FundamentalsQuantReasoning/QuantReasoning/NAS-Data-Download.csv")
install.packages("stringr")
library(stringr)
setwd("~/Documents/GitHub/EcologicalGenomics/myresults")
list.files()
SFS <- scan("XFS_outFold.sfs")
sumSFS <- sum(SFS)
sumSFS
sumSFSpctPoly = 100*(1-(SFS[1]/sumSFS))
plotSFS <- SFS[-c(1,length(SFS))]
barplot(plotSFS)
div <- read.table("XFS_folded_allsites.thetas.idx.pestPG")
colnames(div)=c("window","chrname","wincenter","tW","tP","tF","tH","tL","tajD","fulif","fuliD","fayH","zengsE","numSites")
div
head(div)
pdf("XFS_diversity_stats.pdf")
par(mfrow=c(2,2))
hist(div$tWpersite, col="gray",xlab="Theta-W",main="")
hist(div$tPpersite, col="gray",xlab="Theta-Pi",main="")
hist(div$tajD, col="gray",xlab="Tajima's D",main="")
barplot(plotSFS)
par(mfrow=c(2,2))
hist(div$tWpersite, col="gray",xlab="Theta-W",main="")
hist(div$tPpersite, col="gray",xlab="Theta-Pi",main="")
hist(div$tajD, col="gray",xlab="Tajima's D",main="")
barplot(plotSFS)
dev.off()
summary(div)
head(div)
hist(div$tPpersite-div$tWpersite)
div$tWpersite=div$tW/div$numSites
div$tPpersite=div$tP/div$numSites
hist(div$tPpersite-div$tWpersite)
